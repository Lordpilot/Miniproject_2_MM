install.packages("gRbase")
install.packages(c("bnlearn", "gRain"))
knitr::opts_chunk$set(echo = TRUE)
## Procenter
table(wdat2$CAD, pred3$pred$CAD)/40*100
library(graph)
library(graph)
library(Rgraphviz)
library(RBGL)
library(gRbase)
library(gRain)
library(bnlearn)
library(RBGL)
library(gRbase)
library(gRain)
library(bnlearn)
library(magrittr)
data(cad1, package="gRbase")
names(cad1)
use <- c("Sex", "CAD", "Inherit", "Smoker", "Hyperchol", "Heartfail", "AMI")
use <- c("Sex", "CAD", "Inherit", "Smoker", "Hyperchol", "Heartfail", "AMI")
dat1 <- cad1[, use]
use <- c("Sex", "CAD", "Inherit", "Smoker", "Hyperchol", "Heartfail", "AMI")
dat1 <- cad1[, use]
names(cad1)
data(cad1, package="gRbase")
names(cad1)
use <- c("Sex", "CAD", "Inherit", "Smoker", "Hyperchol", "Heartfail", "AMI")
dat1 <- cad1[, use]
## Start search from empty graph
mm1 <- hc(dat1)
mm1
## Start search from complete graph
sat <-random.graph(use, prob = 1)
mm2 <- hc(dat1, start=sat)
mm2
par(mfrow=c(1,2))
plot(mm1)
plot(mm2)
plot(mm1)
plot(mm2)
## Create Bayesian network
bn1 <- as.grain(bn.fit(mm1, dat1))
bn2 <- as.grain(bn.fit(mm2, dat1))
## Create Bayesian network
bn1 <- as.grain(bn.fit(mm1, dat1))
bn2 <- as.grain(bn.fit(mm2, dat1))
bn1
knitr::opts_chunk$set(echo = TRUE)
library(graph)
knitr::opts_chunk$set(echo = TRUE)
library(Rgraphviz)
library(gRbase)
library(gRbase)
library(gRain)
library(bnlearn)
library(magrittr)
data(cad1, package="gRbase")
names(cad1)
use <- c("Sex", "CAD", "Inherit", "Smoker", "Hyperchol", "Heartfail", "AMI")
dat1 <- cad1[, use]
names(cad1)
install.packages("gRbase")
