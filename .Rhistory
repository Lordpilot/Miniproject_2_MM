a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes")))
a12 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "yes")))
a21 <- (length(which(chestSim1000[x] == "yes" & chestSim1000[y] == "no")))
a22 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "no")))
mat1 <- matrix(c(a11,a12, a21,a22), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(y,x)
print(mat1)
} else if(y==0 && z==0) { # counting the number of observations given x and y=0
a11 <- (length(which(chestSim1000[x]  == "yes")))
a12 <- (length(which(chestSim1000[x] == "no")))
mat1 <- matrix(c(a11,a12),1,2 , dimnames = list(c(" "),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(" ",x)
print(mat1)
} else if(x!=0 && y!=0 && z!=0){ # counting the number of observations given x,y and z
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
a23 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a24 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
mat1 <- matrix(c(NA,a11,a12,a13,a14, NA,a21,a22,a23,a24), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c(x,"yes/ yes","no/yes","yes/no","no/no")))
mat2<-names(dimnames(mat1))<-list(xc(z,y))
print(mat1)
}
}
Counting1("lung","tub","either") #why this result?
Counting1 <- function(x,y,z){ #counting the number of observation for x and y
if (x!=0 && y!=0 && z==0){
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes")))
a12 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "yes")))
a21 <- (length(which(chestSim1000[x] == "yes" & chestSim1000[y] == "no")))
a22 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "no")))
mat1 <- matrix(c(a11,a12, a21,a22), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(y,x)
print(mat1)
} else if(y==0 && z==0) { # counting the number of observations given x and y=0
a11 <- (length(which(chestSim1000[x]  == "yes")))
a12 <- (length(which(chestSim1000[x] == "no")))
mat1 <- matrix(c(a11,a12),1,2 , dimnames = list(c(" "),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(" ",x)
print(mat1)
} else if(x!=0 && y!=0 && z!=0){ # counting the number of observations given x,y and z
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
a23 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a24 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
mat1 <- matrix(c(NA,a11,a12,a13,a14, NA,a21,a22,a23,a24), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c(x,"yes/ yes","no/yes","yes/no","no/no")))
mat2<-names(dimnames(mat1))<-list(x,c(z,y))
print(mat1)
}
}
Counting1("lung","tub","either") #why this result?
mat1 <- matrix(c(a11,a12,a13,a14, a21,a22,a23,a24), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yyy","nyy","yny","nny","yyn","nyn","ynn","nnn")))
Counting1 <- function(x,y,z){ #counting the number of observation for x and y
if (x!=0 && y!=0 && z==0){
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes")))
a12 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "yes")))
a21 <- (length(which(chestSim1000[x] == "yes" & chestSim1000[y] == "no")))
a22 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "no")))
mat1 <- matrix(c(a11,a12, a21,a22), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(y,x)
print(mat1)
} else if(y==0 && z==0) { # counting the number of observations given x and y=0
a11 <- (length(which(chestSim1000[x]  == "yes")))
a12 <- (length(which(chestSim1000[x] == "no")))
mat1 <- matrix(c(a11,a12),1,2 , dimnames = list(c(" "),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(" ",x)
print(mat1)
} else if(x!=0 && y!=0 && z!=0){ # counting the number of observations given x,y and z
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
a23 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a24 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
mat1 <- matrix(c(a11,a12,a13,a14, a21,a22,a23,a24), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yyy","nyy","yny","nny","yyn","nyn","ynn","nnn")))
mat2<-names(dimnames(mat1))<-list(x,c(z,y))
print(mat1)
}
}
Counting1("lung","tub","either") #why this result?
Counting1("asia","tub","0")
Counting1("lung","tub","either") #why this result?
Counting1("lung","tub","0") # no one has both lung and tub
Counting1("bronc","either","dysp")
Counting1 <- function(x,y,z){ #counting the number of observation for x and y
if (x!=0 && y!=0 && z==0){
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes")))
a12 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "yes")))
a21 <- (length(which(chestSim1000[x] == "yes" & chestSim1000[y] == "no")))
a22 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "no")))
mat1 <- matrix(c(a11,a12, a21,a22), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(y,x)
print(mat1)
} else if(y==0 && z==0) { # counting the number of observations given x and y=0
a11 <- (length(which(chestSim1000[x]  == "yes")))
a12 <- (length(which(chestSim1000[x] == "no")))
mat1 <- matrix(c(a11,a12),1,2 , dimnames = list(c(" "),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(" ",x)
print(mat1)
} else if(x!=0 && y!=0 && z!=0){ # counting the number of observations given x,y and z
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
a23 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a24 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
mat1 <- matrix(c(a11,a12,a13,a14, a21,a22,a23,a24), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yyy","nyy","yny","nny","yyn","nyn","ynn","nnn")))
mat2<-names(dimnames(mat1))<-list(z,c(x,y))
print(mat1)
}
}
Counting1("asia","tub","0")
Counting1("lung","tub","either") #why this result?
Counting2 <- function(x,y,z,w){ #counting the number of observation for x,y,z and w
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes" & chestSim1000[w] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no" & chestSim1000[w] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes" & chestSim1000[w] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no" & chestSim1000[w] == "yes")))
a15 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes" & chestSim1000[w] == "yes")))
a16 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no" & chestSim1000[w] == "yes")))
a17 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes" & chestSim1000[w] == "yes")))
a18 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no" & chestSim1000[w] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes" & chestSim1000[w] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no" & chestSim1000[w] == "no")))
a23 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes" & chestSim1000[w] == "no")))
a24 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no" & chestSim1000[w] == "no")))
a25 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes" & chestSim1000[w] == "no")))
a26 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no" & chestSim1000[w] == "no")))
a27 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes" & chestSim1000[w] == "no")))
a28 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no" & chestSim1000[w] == "no")))
mat1 <- matrix(c(a11,a12,a13,a14,a15,a16,a17,a18, a21,a22,a23,a24,a25,a26,a27,a28), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yyy","nyy","yny","nny","yyn","nyn","ynn","nnn")))
mat2<-names(dimnames(mat1))<-list(w,c(x,y,z))
print(mat1)
}
Counting2("smoke","dysp","bronc","lung")
Counting1 <- function(x,y,z){ #counting the number of observation for x and y
if (x!=0 && y!=0 && z==0){
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes")))
a12 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "yes")))
a21 <- (length(which(chestSim1000[x] == "yes" & chestSim1000[y] == "no")))
a22 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "no")))
mat1 <- matrix(c(a11,a12, a21,a22), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(y,x)
print(mat1)
} else if(y==0 && z==0) { # counting the number of observations given x and y=0
a11 <- (length(which(chestSim1000[x]  == "yes")))
a12 <- (length(which(chestSim1000[x] == "no")))
mat1 <- matrix(c(a11,a12),1,2 , dimnames = list(c(" "),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(" ",x)
print(mat1)
} else if(x!=0 && y!=0 && z!=0){ # counting the number of observations given x,y and z
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
a23 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a24 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
mat1 <- matrix(c(a11,a12,a13,a14, a21,a22,a23,a24), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yy","ny","yn","nn")))
mat2<-names(dimnames(mat1))<-list(x,c(z,y))
print(mat1)
}
}
Counting1("asia","tub","0")
Counting1("lung","tub","either") #why this result?
Counting1 <- function(x,y,z){ #counting the number of observation for x and y
if (x!=0 && y!=0 && z==0){
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes")))
a12 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "yes")))
a21 <- (length(which(chestSim1000[x] == "yes" & chestSim1000[y] == "no")))
a22 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "no")))
mat1 <- matrix(c(a11,a12, a21,a22), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(y,x)
print(mat1)
} else if(y==0 && z==0) { # counting the number of observations given x and y=0
a11 <- (length(which(chestSim1000[x]  == "yes")))
a12 <- (length(which(chestSim1000[x] == "no")))
mat1 <- matrix(c(a11,a12),1,2 , dimnames = list(c(" "),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(" ",x)
print(mat1)
} else if(x!=0 && y!=0 && z!=0){ # counting the number of observations given x,y and z
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
a23 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a24 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
mat1 <- matrix(c(a11,a12,a13,a14, a21,a22,a23,a24), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yy","ny","yn","nn")))
mat2<-names(dimnames(mat1))<-list(z,c(x,y))
print(mat1)
}
}
Counting1("asia","tub","0")
Counting1("lung","tub","either") #why this result?
Counting1("lung","tub","0") # no one has both lung and tub
Counting1("bronc","either","dysp")
CTP.List1$either # the normal method can't read the CPT when we have 3 variables
# Now we create a list of our CPT
library(gRain)
asia1 <- cptable(~asia, values = Counting1("asia","0","0"), levels = c("yes","no"))
tub.asia1<-cptable(~tub|asia, values = Counting1("asia","tub","0"),levels = c("yes","no"))
smoke1<-cptable(~smoke,values = Counting1("smoke","0","0"),levels = c("yes","no"))
lung.smoke1<-cptable(~lung|smoke,values = Counting1("smoke","lung","0"),levels = c("yes","no"))
bronc.smoke1<-cptable(~bronc|smoke,values = Counting1("smoke","bronc","0"),levels = c("yes","no"))
either.lung.tub1<-cptable(~either|lung:tub,values = Counting1("lung","tub","either")[,2:5],levels = c("yes","no"))
Counting1("lung","tub","either") #why this result?
xray.either1<-cptable(~xray|either,values = Counting1("either","xray","0"),levels = c("yes","no"))
dysp.bronc.either1<-cptable(~dysp|bronc:either,values = Counting1("bronc","either","dysp")[,2:5],levels = c("yes","no"))
CTP.List1 <- compileCPT(list(asia1,tub.asia1,smoke1,lung.smoke1,bronc.smoke1,either.lung.tub1,xray.either1,dysp.bronc.either1))
CTP.List1
CTP.List1$asia
CTP.List1$tub
CTP.List1$smoke
CTP.List1$lung
CTP.List1$bronc
CTP.List1$either # the normal method can't read the CPT when we have 3 variables
CTP.List1$xray
CTP.List1$dysp # the normal method can't read the CPT when we have 3 variables
ftable(CTP.List1$either, row.vars = 1)
ftable(CTP.List1$dysp, row.vars = 1)
Counting1("asia","tub","0")
Counting1("lung","tub","either") #why this result?
Counting1("lung","tub","either") #why this result?
Counting1("lung","tub","0") # no one has both lung and tub
Counting1("bronc","either","dysp")
length(which(chestSim1000["tub"]  == "yes"
length(which(chestSim1000["tub"]  == "yes"
length(which(chestSim1000["tub"]  == "yes"
length(which(chestSim1000["tub"]  == "yes"))
Counting1("asia","tub","0") # counted values
Counting1("lung","tub","either") #here yy mean yes and yes for lung and tub
Counting1("lung","tub","0") # no one has both lung and tub
Counting1("bronc","either","dysp")
length(which(chestSim1000["either"]  == "yes"))
length(which(chestSim1000["either"]  == "no"))
Counting1("asia","tub","0") # counted values
asia1 <- cptable(~asia, values = Counting1("asia","0","0"), levels = c("yes","no"))
length(which(chestSim1000["tub"]  == "yes"))
length(which(chestSim1000["tub"]  == "no"))
length(which(chestSim1000["tub"])) # number of observations with "tub==yes"
length((chestSim1000["tub"])) # number of observations with "tub==yes"
(chestSim1000["tub"]) # number of observations with "tub==yes"
head(chestSim1000) # our data
(chestSim1000["tub"]) # number of observations with "tub==yes"
data(chestSim1000, package="gRbase")
head(chestSim1000) # our data
(chestSim1000["tub"]) # number of observations is 1000
chestSim1000
data(chestSim1000, package="gRbase")
head(chestSim1000) # our data
chestSim1000
either.lung.tub1<-cptable(~either|lung:tub,values = Counting1("lung","tub","either")[,2:5],levels = c("yes","no"))
either.lung.tub1<-cptable(~either|lung:tub,values = Counting1("lung","tub","either"),levels = c("yes","no"))
dysp.bronc.either1<-cptable(~dysp|bronc:either,values = Counting1("bronc","either","dysp"),levels = c("yes","no"))
length( chestSim1000)
length(chestSim1000[,2])
length(chestSim1000[,1])
Counting1 <- function(x,y,z){ #counting the number of observation for x and y
if (x!=0 && y!=0 && z==0){
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes")))
a12 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "yes")))
a21 <- (length(which(chestSim1000[x] == "yes" & chestSim1000[y] == "no")))
a22 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "no")))
mat1 <- matrix(c(a11,a12, a21,a22), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(y,x)
print(mat1)
} else if(y==0 && z==0) { # counting the number of observations given x and y=0
a11 <- (length(which(chestSim1000[x]  == "yes")))
a12 <- (length(which(chestSim1000[x] == "no")))
mat1 <- matrix(c(a11,a12),1,2 , dimnames = list(c(" "),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(" ",x)
print(mat1)
} else if(x!=0 && y!=0 && z!=0){ # counting the number of observations given x,y and z
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
a23 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a24 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
mat1 <- matrix(c(a11,a12,a13,a14, a21,a22,a23,a24), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yy","ny","yn","nn")))
mat2<-names(dimnames(mat1))<-list(z,c(x,y))
print(mat1)
}
}
Counting1("asia","tub","0") # counted values
Counting1("lung","tub","either") #here yy mean yes and yes for lung and tub
Counting1("lung","tub","0") # no one has both lung and tub
Counting1("bronc","either","dysp")
asia1 <- cptable(~asia, values = Counting1("asia","0","0"), levels = c("yes","no"))
tub.asia1<-cptable(~tub|asia, values = Counting1("asia","tub","0"),levels = c("yes","no"))
CTP.List1
CTP.List1$asia
asia1 <- cptable(~asia, values = Counting1("asia","0","0"), levels = c("yes","no")) #CPT containing the number of observations
tub.asia1<-cptable(~tub|asia, values = Counting1("asia","tub","0"),levels = c("yes","no"))
smoke1<-cptable(~smoke,values = Counting1("smoke","0","0"),levels = c("yes","no"))
lung.smoke1<-cptable(~lung|smoke,values = Counting1("smoke","lung","0"),levels = c("yes","no"))
bronc.smoke1<-cptable(~bronc|smoke,values = Counting1("smoke","bronc","0"),levels = c("yes","no"))
either.lung.tub1<-cptable(~either|lung:tub,values = Counting1("lung","tub","either"),levels = c("yes","no"))
xray.either1<-cptable(~xray|either,values = Counting1("either","xray","0"),levels = c("yes","no"))
either.lung.tub1<-cptable(~either|lung:tub,values = Counting1("lung","tub","either"),levels = c("yes","no"))
xray.either1<-cptable(~xray|either,values = Counting1("either","xray","0"),levels = c("yes","no"))
dysp.bronc.either1<-cptable(~dysp|bronc:either,values = Counting1("bronc","either","dysp"),levels = c("yes","no"))
CTP.List1 <- compileCPT(list(asia1,tub.asia1,smoke1,lung.smoke1,bronc.smoke1,either.lung.tub1,xray.either1,dysp.bronc.either1))
CTP.List1 # overview of all CPT's
CTP.List1$asia
CTP.List1$either # the normal method can't read the CPT when we have 3 variables
CTP.List1$dysp # the normal method can't read the CPT when we have 3 variables
ftable(CTP.List1$either, row.vars = 1)
ftable(CTP.List1$dysp, row.vars = 1)
ftable(CTP.List1$either, row.vars = 1) #ftable helps us read the CTP when we have more the two variables.
dysp1 <- cptable(~ dysp,values = Counting1("dysp","0","0"),levels = c("yes","no"))
smoke.dysp1 <- cptable(~smoke|dysp,values = Counting1("dysp","smoke","0"),levels = c("yes","no"))
CTP.list2 <- compileCPT(list(dysp1,smoke.dysp1))
CTP.list2
smoke.dysp1 <- cptable(~smoke|dysp,values = Counting1("dysp","smoke","0"),levels = c("yes","no")) # our CPT
dysp1 <- cptable(~ dysp,values = Counting1("dysp","0","0"),levels = c("yes","no")) #counting the number of observations
smoke.dysp1 <- cptable(~smoke|dysp,values = Counting1("dysp","smoke","0"),levels = c("yes","no")) # our CPT
dysp1 <- cptable(~ dysp,values = Counting1("dysp","0","0"),levels = c("yes","no")) #counting the number of observations
smoke.dysp1 <- cptable(~smoke|dysp,values = Counting1("dysp","smoke","0"),levels = c("yes","no")) # our CPT
CTP.list2 # overview of CTP's
CTP.list2$smoke #our CTP for smoke given dysp in percentage
CTP.list2 # overview of CTP's
CTP.list2$smoke #our CTP for smoke given dysp in percentage
CTP.list3$lung1
smoke1 <- cptable(~ smoke,values = Counting1("smoke","0","0"),levels = c("yes","no")) # counting smoke
bronc1 <- cptable(~bronc,values = Counting1("bronc","0","0"),levels = c("yes","no")) # counting bronc
lung.smoke1 <- cptable(~lung1|smoke,values = Counting1("smoke","lung","0"),levels = c("yes","no")) # counting lung given smoke
lung.smoke.bronc1 <- cptable(~lung2|smoke:bronc,values = Counting1("smoke","bronc","lung"),levels = c("yes","no")) # counting smoke given smoke and bronc
CTP.list3 <- compileCPT(list(smoke1,bronc1,lung.smoke1,lung.smoke.bronc1)) #creating our CTP's
CTP.list3 # overview
CTP.list3$lung1
CTP.list3$lung2
CTP.list3$lung2 # three variables so not pretty
ftable(CTP.list3$lung2, row.vars = 1) #for CTP's of more then two variables
Counting2("smoke","dysp","bronc","lung")
Counting1("smoke", "dysp", "lung")
smoke1 <- cptable(~ smoke,values = Counting1("smoke","0","0"),levels = c("yes","no")) #counting smoke
dysp1 <- cptable(~ dysp,values = Counting1("dysp","0","0"),levels = c("yes","no"))
bronc1 <- cptable(~ bronc,values = Counting1("bronc","0","0"),levels = c("yes","no"))
lung.smoke.dysp1 <- cptable(~lung1|smoke:dysp, values = Counting1("smoke", "dysp", "lung"),levels = c("yes","no"))
lung.smoke.dysp.bronc1 <- cptable(~lung2|bronc:dysp:smoke, values = Counting2("bronc","dysp","smoke","lung"),levels = c("yes", "no"))
CTP.list4 # overview
CTP.list4 <- compileCPT(list(smoke1,dysp1,bronc1,lung.smoke.dysp1,lung.smoke.dysp.bronc1)) #creating CPT's
CTP.list4 # overview
CTP.list4$lung1
ftable(CTP.list4$lung1, row.vars = 1)
CTP.list4$lung2
ftable(CTP.list4$lung2, row.vars = 1)
Bay.net1 <- grain(CTP.List1)
Bay.net1 <- compile(Bay.net1)
Bay.net1
plot(Bay.net1$dag)
Bay.net1 <- grain(CTP.List1) #turns our CPT into a graphical independent network
Bay.net1 <- compile(Bay.net1) # complies our
Bay.net1
plot(Bay.net1$dag) # plot
plot(moralize(Bay.net1$dag))
plot(Bay.net1$dag) # plot
plot(moralize(Bay.net1$dag)) # a version which drops directions
plot(moralize(Bay.net1$dag)) # a version which drops directions
plot(moralize(Bay.net1$dag)) # a version which drops directions
plot(Bay.net1$dag) # plot
plot(moralize(Bay.net1$dag)) # a version which drops directions
plot(triangulate(moralize(Bay.net1$dag)))
plot(triangulate(moralize(Bay.net1$dag)))
plot(moralize(Bay.net1$dag)) # a version which drops directions
plot(triangulate(moralize(Bay.net1$dag)))
plot(Bay.net1$dag) # plot
Bay.net2 <- grain(CPT.list2)
Bay.net2 <- compile(Bay.net2)
Bay.net2 <- grain(CPT.list2)
Counting1 <- function(x,y,z){ #counting the number of observation for x and y
if (x!=0 && y!=0 && z==0){
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes")))
a12 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "yes")))
a21 <- (length(which(chestSim1000[x] == "yes" & chestSim1000[y] == "no")))
a22 <- (length(which(chestSim1000[x] == "no" & chestSim1000[y] == "no")))
mat1 <- matrix(c(a11,a12, a21,a22), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(y,x)
print(mat1)
} else if(y==0 && z==0) { # counting the number of observations given x and y=0
a11 <- (length(which(chestSim1000[x]  == "yes")))
a12 <- (length(which(chestSim1000[x] == "no")))
mat1 <- matrix(c(a11,a12),1,2 , dimnames = list(c(" "),c("yes","no")))
mat2 <- names(dimnames(mat1))<-c(" ",x)
print(mat1)
} else if(x!=0 && y!=0 && z!=0){ # counting the number of observations given x,y and z
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
a23 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no")))
a24 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no")))
mat1 <- matrix(c(a11,a12,a13,a14, a21,a22,a23,a24), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yy","ny","yn","nn")))
mat2<-names(dimnames(mat1))<-list(z,c(x,y))
print(mat1)
}
}
Counting1("asia","tub","0") # counted values
Counting1("lung","tub","either") #here yy mean yes and yes for lung and tub
Counting1("lung","tub","0") # no one has both lung and tub
Counting1("bronc","either","dysp")
# Now we create a list of our CPT
library(gRain)
asia1 <- cptable(~asia, values = Counting1("asia","0","0"), levels = c("yes","no")) #putting observations together
tub.asia1<-cptable(~tub|asia, values = Counting1("asia","tub","0"),levels = c("yes","no")) # tub given asia
smoke1<-cptable(~smoke,values = Counting1("smoke","0","0"),levels = c("yes","no"))
lung.smoke1<-cptable(~lung|smoke,values = Counting1("smoke","lung","0"),levels = c("yes","no"))
bronc.smoke1<-cptable(~bronc|smoke,values = Counting1("smoke","bronc","0"),levels = c("yes","no"))
either.lung.tub1<-cptable(~either|lung:tub,values = Counting1("lung","tub","either"),levels = c("yes","no"))
xray.either1<-cptable(~xray|either,values = Counting1("either","xray","0"),levels = c("yes","no"))
dysp.bronc.either1<-cptable(~dysp|bronc:either,values = Counting1("bronc","either","dysp"),levels = c("yes","no"))
CPT.List1 <- compileCPT(list(asia1,tub.asia1,smoke1,lung.smoke1,bronc.smoke1,either.lung.tub1,xray.either1,dysp.bronc.either1))
CPT.List1 # overview of all CPT's
CPT.List1$asia #CPT for asia in percent
CPT.List1$tub
CPT.List1$smoke
CPT.List1$lung
CPT.List1$bronc
CPT.List1$either # the normal method can't read the CPT when we have 3 variables
CPT.List1$xray
CPT.List1$dysp # the normal method can't read the CPT when we have 3 variables
ftable(CPT.List1$either, row.vars = 1) #ftable helps us read the CPT when we have more the two variables.
ftable(CPT.List1$dysp, row.vars = 1)
dysp1 <- cptable(~ dysp,values = Counting1("dysp","0","0"),levels = c("yes","no")) #counting the number of observations for dysp
smoke.dysp1 <- cptable(~smoke|dysp,values = Counting1("dysp","smoke","0"),levels = c("yes","no")) # counting smoke given dysp
CPT.list2 <- compileCPT(list(dysp1,smoke.dysp1)) #creating our CPT
CPT.list2 # overview of CPT's
CPT.list2$smoke #our CPT for smoke given dysp in percentage
smoke1 <- cptable(~ smoke,values = Counting1("smoke","0","0"),levels = c("yes","no")) # counting smoke
bronc1 <- cptable(~bronc,values = Counting1("bronc","0","0"),levels = c("yes","no")) # counting bronc
lung.smoke1 <- cptable(~lung1|smoke,values = Counting1("smoke","lung","0"),levels = c("yes","no")) # counting lung given smoke
lung.smoke.bronc1 <- cptable(~lung2|smoke:bronc,values = Counting1("smoke","bronc","lung"),levels = c("yes","no")) # counting smoke given smoke and bronc
CPT.list3 <- compileCPT(list(smoke1,bronc1,lung.smoke1,lung.smoke.bronc1)) #creating our CPT's
CPT.list3 # overview
CPT.list3$lung1
CPT.list3$lung2 # conditional on two variables so not pretty
ftable(CPT.list3$lung2, row.vars = 1) #for CPT's of more then two variables
Counting2 <- function(x,y,z,w){ #counting the number of observation for x,y,z and w
a11 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes" & chestSim1000[w] == "yes")))
a12 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no" & chestSim1000[w] == "yes")))
a13 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes" & chestSim1000[w] == "yes")))
a14 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no" & chestSim1000[w] == "yes")))
a15 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes" & chestSim1000[w] == "yes")))
a16 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no" & chestSim1000[w] == "yes")))
a17 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes" & chestSim1000[w] == "yes")))
a18 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no" & chestSim1000[w] == "yes")))
a21 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes" & chestSim1000[w] == "no")))
a22 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "yes" & chestSim1000[z] == "no" & chestSim1000[w] == "no")))
a23 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "yes" & chestSim1000[w] == "no")))
a24 <- (length(which(chestSim1000[x]  == "yes" & chestSim1000[y] == "no" & chestSim1000[z] == "no" & chestSim1000[w] == "no")))
a25 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "yes" & chestSim1000[w] == "no")))
a26 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "yes" & chestSim1000[z] == "no" & chestSim1000[w] == "no")))
a27 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "yes" & chestSim1000[w] == "no")))
a28 <- (length(which(chestSim1000[x]  == "no" & chestSim1000[y] == "no" & chestSim1000[z] == "no" & chestSim1000[w] == "no")))
mat1 <- matrix(c(a11,a12,a13,a14,a15,a16,a17,a18, a21,a22,a23,a24,a25,a26,a27,a28), nrow = 2, byrow = TRUE, dimnames = list(c("yes","no"),c("yyy","nyy","yny","nny","yyn","nyn","ynn","nnn")))
mat2<-names(dimnames(mat1))<-list(w,c(x,y,z))
print(mat1)
}
Counting2("smoke","dysp","bronc","lung") #our counted variables
Counting1("smoke", "dysp", "lung")
smoke1 <- cptable(~ smoke,values = Counting1("smoke","0","0"),levels = c("yes","no")) #counting smoke
dysp1 <- cptable(~ dysp,values = Counting1("dysp","0","0"),levels = c("yes","no"))
bronc1 <- cptable(~ bronc,values = Counting1("bronc","0","0"),levels = c("yes","no"))
lung.smoke.dysp1 <- cptable(~lung1|smoke:dysp, values = Counting1("smoke", "dysp", "lung"),levels = c("yes","no"))
lung.smoke.dysp.bronc1 <- cptable(~lung2|bronc:dysp:smoke, values = Counting2("bronc","dysp","smoke","lung"),levels = c("yes", "no"))
CPT.list4 <- compileCPT(list(smoke1,dysp1,bronc1,lung.smoke.dysp1,lung.smoke.dysp.bronc1)) #creating CPT's
CPT.list4 # overview
CPT.list4$lung1
ftable(CPT.list4$lung1, row.vars = 1) #pretty verison
CPT.list4$lung2
ftable(CPT.list4$lung2, row.vars = 1) #pretty version
Bay.net2 <- grain(CPT.list2)
Bay.net2 <- compile(Bay.net2)
Bay.net2
plot(Bay.net2$dag)
plot(moralize(Bay.net2$dag))
plot(triangulate(moralize(Bay.net2$dag)))
# data from exercise 3
Bay.net3 <- grain(CPT.list3)
Bay.net3 <- compile(Bay.net3)
Bay.net3
plot(Bay.net3$dag)
plot(moralize(Bay.net3$dag))
plot(triangulate(moralize(Bay.net3$dag)))
plot(moralize(Bay.net3$dag))
plot(triangulate(moralize(Bay.net3$dag)))
# data from exercise 4
Bay.net4 <- grain(CPT.list4)
Bay.net4 <- compile(Bay.net4)
Bay.net4
plot(Bay.net4$dag)
plot(moralize(Bay.net4$dag))
plot(triangulate(moralize(Bay.net4$dag)))
